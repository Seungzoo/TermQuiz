<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.termquiz.team.mapperInterface.MemberMapper">
	
	<select id="selectOne" resultType="com.termquiz.team.vo.MemberVO">
    	select * from member where email=#{email}
    </select>
	
	<insert id="insert">
		insert into
		member(email,nickname,password,name,phoneNumber,scNumF,scNumL)
		values(#{email},#{nickname},#{password},#{name},#{phoneNumber},#{scNumF},#{scNumL})
	</insert>
	
    <update id="update">
    	update member set nickname=#{nickname}, phoneNumber=#{phoneNumber}
    	where email=#{email}
    </update>
    
    <select id="emailCheck" parameterType="com.termquiz.team.vo.MemberVO" resultType="int">
    	select count(*) from member where email=#{email}
    </select>
    
    <select id="nicknameCheck" parameterType="com.termquiz.team.vo.MemberVO" resultType="int">
    	select count(*) from member where nickname=#{nickname}
    </select>
	
	<update id="movieScoreUpdate">
		update member
		inner join (select movieqId, sum(score)	mvs from movies group by movieqId)
		as mv set movieScore = mv.mvs
		where movieqId = nickname
	</update>

	<update id="musicScoreUpdate">
		update member
		inner join (select musicqId, sum(score)	mss from musics group by musicqId)
		as ms set musicScore = ms.mss
		where musicqId = nickname
	</update>

	<update id="totalScoreUpdate">
		update member
		set totalScore = movieScore + musicScore,       
		<choose>
	        <when test="totalScore/10>=30">
	            mlevel = 30      
	        </when>
	        <otherwise>
	            mlevel = TRUNCATE(totalScore/10,0)
	        </otherwise>
    	</choose>
	</update>

	<select id="selectList" resultType="com.termquiz.team.vo.MemberVO">
		select email, nickname, name, phoneNumber, scNumF, scNumL, adminRight, mlevel
		from member 
		order by adminRight desc
	</select>

	<select id="rankingSort" resultType="com.termquiz.team.vo.MemberVO">
		select nickname,movieScore,musicScore,totalScore,mlevel
		from member 
		order by ${sortName} desc
		limit #{sno}, #{rowsPerPage}
	</select>
	
	<select id="rankingCount" resultType="int">
		select count(*) from member
	</select>

	<update id="addAdmin">
		update member
		set adminRight = 1
		where nickname = #{nickname}
	</update>
	
	<update id="removeAdmin">
		update member
		set adminRight = 0
		where nickname = #{nickname}
	</update>
	
	<update id="changePW">
		update member
		set password = #{password}
		where email = #{email}
	</update>
	
	<delete id="deleteMember">
		delete from member where email = #{email}
	</delete>
	
	<select id="levelCheck" resultType="int">
		select totalScore from member 
		where nickname = #{nickname}
	</select>
</mapper>